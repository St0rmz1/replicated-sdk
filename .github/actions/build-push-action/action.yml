# build-push-action/action.yml
name: 'Build and push images with Chainguard'
description: 'Composite action for building and pushing images with Chainguard'
inputs:
  context:
    description: 'Path to the context directory'
    required: true

  image-name:
    description: 'Full destination image name'
    required: true

  git-tag:
    description: 'Git tag'
    required: true

  registry-username:
    description: 'Username to login to registry'
    default: ''
    required: false

  registry-password:
    description: 'Password to login to registry'
    default: ''
    required: false

outputs:
  digest:
    value: ${{ steps.apko-publish.outputs.digest }}
    description: |
      The digest of the published container image.


runs:
  using: "composite"
  steps:
    - name: template melange and apko configs
      shell: bash
      run: |
        export GIT_TAG=${{ inputs.git-tag }}
        envsubst '${GIT_TAG}' < ${{ inputs.context }}/melange.yaml.tmpl > ${{ inputs.context }}/melange.yaml
        envsubst '${GIT_TAG}' < ${{ inputs.context }}/apko.yaml.tmpl > ${{ inputs.context }}/apko.yaml

    - id: cache-dir
      shell: bash
      run: echo "cache_dir=$(go env GOMODCACHE)" >> "$GITHUB_OUTPUT"

    # Build with melange
    - uses: chainguard-dev/actions/melange-build@main
      id: melange-build
      with:
        config: ${{ inputs.context }}/melange.yaml
        archs: amd64,arm64
        sign-with-temporary-key: true
        cache-dir: ${{ steps.cache-dir.outputs.cache_dir }}

    # Publish with apko to the registry
    # The digest of the published image is needed for the provenance job
    - uses: chainguard-images/actions/apko-publish@main
      id: apko-publish
      with:
        config: ${{ inputs.context }}/apko.yaml
        tag: ${{ inputs.image-name }}
        archs: amd64,arm64
        vcs-url: true
        generic-user: ${{ inputs.registry-username }}
        generic-pass: ${{ inputs.registry-password }}

    # Generate provenance and publish using
    # slsa-framework/slsa-github-generator/.github/workflows/generator_container_slsa3.yml@v1.10.0
    - uses: slsa-framework/slsa-github-generator/.github/workflows/generator_container_slsa3.yml@v1.10.0
      id: slsa-generator
      with:
        image: ${{ inputs.image-name }}
        digest: ${{ steps.apko-publish.outputs.digest }}
        registry-username: ${{ inputs.registry-username }}
        registry-password: ${{ inputs.registry-password }} 